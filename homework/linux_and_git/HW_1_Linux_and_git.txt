Linux

1. mkdir linux_lecture
touch notes.txt
2. cp notes.txt linux_lecture
3. cd linux_lecture
ls -l
4. ls -la
ls -r
ls -l
5. mv notes.txt new_notes.txt
6. cd linux_lecture
rm notes.txt
cd
rm new_notes.txt
cd linux_lecture
touch homework.sh
7.  touch -m -t 202001010415.00 homework.sh
stat homework.sh
touch hw.sh, hw1.sh, hw2.sh, hw1.txt
8. find *.txt
9. mkdir lecture_new
cp *.txt lecture_new
10. echo "echo 'linux_lecture'" > homework.sh
11. cat homework.sh
12. chmod 200 homework.sh
ls -la homework.sh
13. chmod 700 homework.sh
ls -la homework.sh
13a. ./homework.sh
14. nano homework.sh

1
2
3
4
5
6
7
8
9
10
Ctrl+X
Y
Enter
15. head -7 homework.sh
16. touch notes.sh
echo ls > notes.sh
chmod 700 notes.sh
17. ./notes.sh

GIT

First of all to been created repository on github and with 
help command git clone (ssh name repository) to put in terminal
Linux.

1. mkdir cursor_git
2. cd cursor_git
3. touch first.py
4. git add first.py
5. git commit -m "adding first.py"
6. git log
7. touch second.py
8. git add second.py
9. git commit -m "adding second.py"
10. rm first.py
11. git add first.py 
12. git commit -m "removing first.py"
13. git log
Ctrl+Z
14. git push -u origin master
15. git branch first
16. git checkout -b second
17. echo print('Hello') > second.py 
18. git stash
git checkout first
19. git checkout second
git stash pop
20. git add second.py
21. git commit -m "Changing second.py"
22. git push -u origin second
23. git checkout first
24. nano second.py
print("Cursor")
Ctrl+X
Y
Enter
git status
25. git add second.py
26. git commit -m "Changing second.py"
27. git push -u origin first
28. git checkout master
29. git merge second
30. git merge first
31. git add second.py 
git commit -m "resolved conflict."
git push
